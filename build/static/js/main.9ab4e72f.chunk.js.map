{"version":3,"sources":["api/gameAPI.js","features/game/gameSlice.js","features/game/game.js","features/login/loginSlice.js","app/store.js","pixi/draw.js","utils/hexagons.js","pixi/app.js","features/pixiroot/pixiroot.js","pixi/index.js","App.js","serviceWorker.js","index.js"],"names":["getMove","napr","a","fetch","method","headers","body","JSON","stringify","response","json","move","gameSlice","createSlice","name","initialState","loading","x","y","error","reducers","getMoveStart","state","getMoveSuccess","action","payload","getMoveFailure","actions","fetchMove","dispatch","Game","useDispatch","className","onClick","loginSlice","data","getLoginStart","getLoginSuccess","getLoginFailure","configureStore","reducer","game","gameReducer","login","loginReduser","Draw","app","this","pixiObj","PIXI","from","stage","addChild","observeStore","store","move1","banny","obj","offset","container","map","draw","Hexagons","row","cell","size","hexList","_generateHexagons","width","Math","sqrt","j","i","push","Hexagon","block","hex","find","item","q","r","s","_cubeRound","z","h","rx","round","ry","rz","x_diff","abs","y_diff","z_diff","color","beginFill","path","hex_corner","center","angle_deg","angle_rad","PI","sin","cos","point","forEach","graphics","lineStyle","drawPolygon","endFill","target","App","renderer","height","backgroundColor","ticker","loader","gameObj","add","render","bind","LOW","start","select","onChange","arg","currentState","handleChange","nextState","getState","unsubscribe","subscribe","destroy","stop","view","Pixiroot","useEffect","load","document","getElementById","appendChild","initPixi","id","Boolean","window","location","hostname","match","ReactDOM","StrictMode","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.9ab4e72f.chunk.js","sourcesContent":["export async function getMove(napr) {\r\n    const url = `/move` \r\n    const response = await fetch(url, {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json;charset=utf-8'\r\n        },\r\n        body: JSON.stringify(napr)\r\n      });\r\n    const move = await response.json()\r\n    return move\r\n}","import { createSlice } from '@reduxjs/toolkit'\r\nimport {getMove} from '../../api/gameAPI'\r\n\r\nexport const gameSlice = createSlice({\r\n  name: 'game',\r\n  initialState: {\r\n    loading: false,\r\n    x: 100,\r\n    y: 100,\r\n    error: {},\r\n  },\r\n  reducers: {\r\n    getMoveStart: state => {\r\n      state.loading = true\r\n    },\r\n    getMoveSuccess: (state, action) => {\r\n      const { x, y } = action.payload\r\n      state.x += x\r\n      state.y += y\r\n      state.loading = false\r\n      state.error = null\r\n    },\r\n    getMoveFailure(state, action) {\r\n      state.loading = false\r\n      state.error = action.payload\r\n    }\r\n  },\r\n});\r\n\r\nexport const { getMoveStart, getMoveSuccess, getMoveFailure} = gameSlice.actions\r\n\r\nexport default gameSlice.reducer\r\n\r\nexport const fetchMove = (napr) => async dispatch => {\r\n  try {\r\n      dispatch(getMoveStart())\r\n      const move = await getMove(napr)\r\n      dispatch(getMoveSuccess(move))\r\n  } catch (err) {\r\n      dispatch(getMoveFailure(err))\r\n  }\r\n}\r\n","import React from 'react'\r\nimport { useDispatch } from 'react-redux'\r\nimport {\r\n  fetchMove\r\n} from './gameSlice'\r\n\r\nexport function Game() {\r\n  const dispatch = useDispatch();\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"game\">\r\n        <button\r\n          onClick={() => dispatch(fetchMove({x:-10})) }\r\n        >\r\n          &#129144;\r\n        </button>\r\n        <button\r\n          onClick={() => dispatch(fetchMove({x:10})) }\r\n        >\r\n          &#129146;\r\n        </button>\r\n        <button\r\n          onClick={() => dispatch(fetchMove({y:-10})) }\r\n        >\r\n          &#129145;\r\n        </button>\r\n        <button\r\n          onClick={() => dispatch(fetchMove({y:10})) }\r\n        >\r\n          &#129147;\r\n        </button>\r\n        <span ></span>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import { createSlice } from '@reduxjs/toolkit'\r\nimport {getLogin} from '../../api/loginAPI'\r\n\r\nexport const loginSlice = createSlice({\r\n    name: 'login',\r\n    initialState: {\r\n        loading: false,\r\n        error: 0,\r\n        data: {},\r\n    },\r\n    reducers: {\r\n        getLoginStart(state) {\r\n            state.loading = true\r\n            state.error = null\r\n        },\r\n        getLoginSuccess(state, action) {\r\n            state.data = action.payload\r\n            state.loading = false\r\n            state.error = null\r\n        },\r\n        getLoginFailure(state, action) {\r\n            state.loading = false\r\n            state.error = action.payload\r\n        },\r\n    },\r\n})\r\n\r\nexport const { getLoginStart, getLoginSuccess, getLoginFailure } = loginSlice.actions\r\n\r\nexport default loginSlice.reducer\r\n\r\nexport const fetchLogin = () => async dispatch => {\r\n    try {\r\n        dispatch(getLoginStart())\r\n        const comments = await getLogin()\r\n        dispatch(getLoginSuccess(comments))\r\n    } catch (err) {\r\n        dispatch(getLoginFailure(err))\r\n    }\r\n}\r\n","import { configureStore } from '@reduxjs/toolkit'\r\nimport gameReducer from '../features/game/gameSlice'\r\nimport loginReduser from '../features/login/loginSlice'\r\n\r\nexport default configureStore({\r\n  reducer: {\r\n    game: gameReducer,\r\n    login: loginReduser,\r\n  },\r\n});\r\n","import * as PIXI from 'pixi.js-legacy'\r\n\r\nexport class Draw {   \r\n    constructor (app) {\r\n        this.app = app\r\n    }\r\n    gameObj () {\r\n        const pixiObj = PIXI.Sprite.from('https://pixijs.io/examples/examples/assets/bunny.png')\r\n        this.app.stage.addChild(pixiObj)\r\n        return pixiObj\r\n    }\r\n    move () {\r\n        function select(state) {\r\n            return state.game\r\n        }\r\n        this.app.observeStore(this.app.store, select, this.move1, this.app.banny)\r\n    }\r\n    move1({x, y}, obj) {\r\n        obj.x = x\r\n        obj.y = y\r\n    }\r\n    drawMap(offset) {\r\n        const container = this.app.map.draw(\"0xDCDCDC\")\r\n        container.x = offset.x\r\n        container.y = offset.y\r\n        this.app.stage.addChild(container)\r\n    }\r\n}","import * as PIXI from 'pixi.js-legacy'\r\n\r\nexport class Hexagons {\r\n    constructor (row, cell, size) {\r\n        this.hexList = []\r\n        this._generateHexagons(row, cell, size)\r\n    }\r\n    _generateHexagons(row, cell, size) {\r\n        const width = Math.sqrt(3)/2 * size*2\r\n        for (let j = 0; j<row; j++){\r\n            for (let i = 0; i < cell; i++){\r\n                if (i%2){\r\n                    this.hexList.push(new Hexagon({x:0+size*2/4*3*i, y:0+width/2+width*j}, i, j))\r\n                } else {\r\n                    this.hexList.push(new Hexagon({x:0+size*2/4*3*i, y:0+width*j}, i, j))\r\n                }\r\n            }\r\n        } \r\n        //TODO Временная заглушка с тест данными\r\n        this.hexList[10].block = true\r\n        this.hexList[25].block = true\r\n        this.hexList[40].block = true\r\n        this.hexList[55].block = true\r\n        this.hexList[70].block = true\r\n        this.hexList[71].obj = true\r\n    }\r\n    findHex (hex) {\r\n        return this.hexList.find(item => item.x === hex.x && item.y === hex.y)\r\n    }\r\n    pixelToHex(x, y){\r\n        const q = x * 2/3 / 20\r\n        const r = (-x / 3 + Math.sqrt(3)/3 * y) / 20\r\n        const s = -q-r\r\n        return this._cubeRound({x:q, y:r, z:s})\r\n    }\r\n    _cubeRound(h){\r\n        var rx = Math.round(h.x)\r\n        var ry = Math.round(h.y)\r\n        var rz = Math.round(h.z)\r\n  \r\n        var x_diff = Math.abs(rx - h.x)\r\n        var y_diff = Math.abs(ry - h.y)\r\n        var z_diff = Math.abs(rz - h.z)\r\n  \r\n        if (x_diff > y_diff && x_diff > z_diff){\r\n            rx = -ry-rz\r\n        } else if (y_diff > z_diff) {\r\n            ry = -rx-rz\r\n        } else {\r\n            rz = -rx-ry\r\n        }\r\n  \r\n        return {x:rx, y:ry, z:rz}\r\n    }\r\n    draw (color, beginFill = false) {\r\n        const path = []\r\n        const container = new PIXI.Container()\r\n        function hex_corner (center, size, i){\r\n            const angle_deg = 60 * i   + 30\r\n            const angle_rad = Math.PI / 180 * angle_deg\r\n            return [center.x + size *  Math.sin(angle_rad), center.y + size * Math.cos(angle_rad)]\r\n        }\r\n        for( let i = 0; i < 6; i++) {\r\n            const point = hex_corner({x: 0, y: 0}, 20, i)\r\n            path.push(...point)\r\n        }\r\n        this.hexList.forEach(item => {\r\n            const graphics = new PIXI.Graphics()\r\n            graphics.lineStyle(1, color)\r\n            if (beginFill) {\r\n                graphics.beginFill(beginFill, 1)\r\n            }\r\n            if (item.block) {\r\n                graphics.beginFill(0x3500FA, 1)\r\n            }\r\n            graphics.drawPolygon(path)\r\n            graphics.x = item.center.x\r\n            graphics.y = item.center.y\r\n            graphics.endFill()\r\n            container.addChild(graphics)\r\n        })\r\n        return container\r\n    }\r\n}\r\n\r\nexport class Hexagon {\r\n    constructor (center, row, cell) {\r\n        this.center = center\r\n        this.q = row\r\n        this.r = cell\r\n        this.x = this.q   \r\n        this.y = this.r - (this.q - (this.q&1)) / 2\r\n        this.z = -this.x -  this.y\r\n        //Клетка непроходима?\r\n        this.block = false\r\n        //В клетке расположен обьект?\r\n        this.obj = false\r\n        //Клетка выделена?\r\n        this.target = false\r\n    }\r\n}\r\n","import * as PIXI from 'pixi.js-legacy'\r\n\r\nimport store from '../app/store';\r\nimport {Draw} from './draw.js'\r\nimport {Hexagons} from '../utils/hexagons'\r\n\r\nexport class App {\r\n    constructor() {\r\n        this.renderer = new PIXI.Renderer({\r\n            width: 800,\r\n            height: 400,\r\n            backgroundColor: 0x1099bb,\r\n        });\r\n        this.ticker = new PIXI.Ticker()\r\n        this.stage = new PIXI.Container()\r\n        this.loader = new PIXI.Loader()\r\n\r\n        this.dispatch = store.dispatch\r\n        this.store = store\r\n        this.map = new Hexagons(10, 10, 20)\r\n        this.draw = new Draw(this)\r\n        this.banny = this.draw.gameObj()\r\n\r\n        this.ticker.add(this.render.bind(this), PIXI.UPDATE_PRIORITY.LOW)\r\n        this.ticker.start()\r\n    }\r\n  \r\n    render() {\r\n        this.renderer.render(this.stage)\r\n    }\r\n  \r\n    get view() {\r\n        return this.renderer.view;\r\n    }\r\n\r\n    observeStore(store, select, onChange, arg) {\r\n        let currentState;\r\n      \r\n        function handleChange() {\r\n          let nextState = select(store.getState());\r\n          if (nextState !== currentState) {\r\n            currentState = nextState;\r\n            onChange(currentState, arg);\r\n          }\r\n        }\r\n      \r\n        let unsubscribe = store.subscribe(handleChange);\r\n        handleChange();\r\n        return unsubscribe;\r\n    }\r\n  \r\n    destroy() {\r\n        this.renderer.destroy();\r\n        this.ticker.stop();\r\n    }\r\n  }","import React, { useEffect } from 'react';\r\n\r\nimport { initPixi } from '../../pixi'\r\n\r\nexport function Pixiroot() {\r\n    /* eslint-disable */\r\n    useEffect(() => {\r\n        const app = initPixi()\r\n        return app.destroy.bind(app)\r\n    }, [])\r\n    /* eslint-enable */\r\n    return (\r\n        <div id=\"pixi\">\r\n\r\n        </div>\r\n    );\r\n}\r\n","import {App} from './app.js'\r\n\r\nexport function initPixi () {\r\n    //const offset = {x: 25, y: 25}\r\n    function initLevel() {\r\n        document.getElementById('pixi').appendChild(app.view)\r\n        app.draw.move()\r\n    }\r\n    const app = new App()\r\n    app.loader.load(initLevel)\r\n    return app\r\n}\r\n\r\n","import React from 'react'\r\nimport { Game } from './features/game/game'\r\nimport {Pixiroot} from './features/pixiroot/pixiroot'\r\nimport './App.css';\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <header className=\"App-header\">\r\n        <Pixiroot />\r\n        <Game />\r\n      </header>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport store from './app/store';\r\nimport { Provider } from 'react-redux';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <App />\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}